// <auto-generated />
using ChatApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ChatApi.Migrations
{
    [DbContext(typeof(ChatContext))]
    [Migration("20180117113414_initial3")]
    partial class initial3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChatApi.Models.Chat", b =>
                {
                    b.Property<int>("Member1");

                    b.Property<int>("Member2");

                    b.HasKey("Member1", "Member2");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("ChatApi.Models.Friendship", b =>
                {
                    b.Property<long>("ReceiverId");

                    b.Property<long>("SenderId");

                    b.Property<bool>("status");

                    b.HasKey("ReceiverId", "SenderId");

                    b.HasIndex("SenderId");

                    b.ToTable("Friendship");
                });

            modelBuilder.Entity("ChatApi.Models.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ChatId");

                    b.Property<int?>("ChatMember1");

                    b.Property<int?>("ChatMember2");

                    b.Property<string>("Content");

                    b.Property<string>("CreationTime");

                    b.Property<long>("ReceiverId");

                    b.Property<bool>("Seen");

                    b.Property<long>("SenderId");

                    b.HasKey("Id");

                    b.HasIndex("ChatMember1", "ChatMember2");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ChatApi.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateOfJoin")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Phone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChatApi.Models.Friendship", b =>
                {
                    b.HasOne("ChatApi.Models.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ChatApi.Models.User", "Sender")
                        .WithMany("PossibleFriends")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ChatApi.Models.Message", b =>
                {
                    b.HasOne("ChatApi.Models.Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatMember1", "ChatMember2");
                });
#pragma warning restore 612, 618
        }
    }
}
